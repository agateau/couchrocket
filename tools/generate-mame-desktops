#!/usr/bin/env python3
import argparse
import os
import subprocess
import sys

import desktopgenerator


SNAPS_URL = 'http://www.mamedb.com/snap/{rom}.png'


DESCRIPTION = """\
Generates .desktop files to start Mame roms.
"""


BLACK_LIST = {"neogeo", "qsound"}


def create_title_for_rom_dict(mame):
    print('Generating title db...')
    out = str(subprocess.check_output([mame, '-ll']), 'utf-8')
    dct = {}
    first = True
    for line in out.splitlines():
        if first:
            first = False
            continue
        rom, title = line.strip().split(' ', 1)
        if rom in BLACK_LIST:
            continue
        title = title.strip('" ')  # Remove leading spaces and enclosing double quotes
        dct[rom] = title
    print('Done')
    return dct


class App(desktopgenerator.App):
    EXTENSION = '.zip'

    def __init__(self, config):
        desktopgenerator.App.__init__(self, config)
        self.title_for_rom = create_title_for_rom_dict(config.command)

    def is_rom(self, rom):
        return rom in self.title_for_rom

    def get_snap_url(self, rom):
        return SNAPS_URL.format(rom=rom)

    def get_title(self, rom):
        return self.title_for_rom[rom]


def main():
    parser = argparse.ArgumentParser()
    parser.description = DESCRIPTION

    parser.add_argument('-m', '--mame', dest='mame', default='mame',
        help='Mame binary to use. defaults to mame')

    parser.add_argument('-s', '--snap_dir', dest='snap_dir',
        help='Path to the snap_dir dir')

    parser.add_argument('-d', '--desktop_dir', dest='desktop_dir', default=os.getcwd(),
        help='Destination dir, defaults to current directory')

    parser.add_argument('dir_or_rom_name')

    args = parser.parse_args()
    if not os.path.isdir(args.snap_dir):
        parser.error('Snaps dir does not exist')

    config = desktopgenerator.Config(command=args.mame, snap_dir=args.snap_dir, desktop_dir=args.desktop_dir)
    app = App(config)

    if os.path.isdir(args.dir_or_rom_name):
        app.process_dir(args.dir_or_rom_name)
    else:
        app.process_file(args.dir_or_rom_name)

    return 0


if __name__ == '__main__':
    sys.exit(main())
# vi: ts=4 sw=4 et
